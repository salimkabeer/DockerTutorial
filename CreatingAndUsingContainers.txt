$ docker container run --publish 80:80 nginx

$ docker container run --publish 80:80 --detach nginx

$ docker container ls

$ docker container stop <container-id>

$ docker container run --publish 80:80 --detach --name webhost nginx

# Refresh nginx at 0.0.0.0:80

$ docker container logs webhost ( -f for live logs)

$ docker container top webhost

$ docker container ls -a

$ docker container rm 63f 690 od3

$ docker container rm -f 63f

$ dcoker container ls -a

# What happens in "docker container run"
1. Looks for that image locally in image cache, if doesn't find anything
2. Then looks in remote image repository (defaults to Docker Hub)
3. Downloads the latest version (nginx:latest by default)
4. Creates new container based on that image and prepares to start
5. Gives it a virtual IP on a private network inside docker engine
6. Opens up port 80 on host and forwards to port 80 in container.
7. Starts container by using the CMD in the image Dockerfile
